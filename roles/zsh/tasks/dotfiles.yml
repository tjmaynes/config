---

- name: Ensure backup directory exists
  file:
    path: "{{ backups_dir }}"
    state: directory
    follow: true

- name: Set BACKUPS_DIRECTORY env var if not already started
  ansible.builtin.lineinfile:
    state: present
    path: "$HOME/.zshrc"
    line: "export BACKUPS_DIRECTORY={{ backups_dir }}"

- name: Set PROJECTS_DIRECTORY env var if not already started
  ansible.builtin.lineinfile:
    state: present
    path: "$HOME/.zshrc"
    line: "export PROJECTS_DIRECTORY={{ git_projects_dir }}"

- name: Check .aliases exists
  stat:
    path: "$HOME/.aliases"
  register: check_aliases_result

- name: Ensure .aliases is setup
  ansible.builtin.lineinfile:
    state: present
    path: "$HOME/.zshrc"
    line: "source $HOME/.aliases"
  when: check_aliases_result.stat.exists

- name: Check .custom-fns exists
  stat:
    path: "$HOME/.custom-fns.sh"
  register: check_customfns_result

- name: Ensure .custom-fns is setup
  ansible.builtin.lineinfile:
    state: present
    path: "$HOME/.zshrc"
    line: "source $HOME/.custom-fns.sh"
  when: check_customfns_result.stat.exists

- name: Ensure Rack user directory exists
  file:
    path: "{{ rack_user_dir }}"
    state: directory
    follow: true

- name: Set RACK_USER_DIR env var if not already started
  ansible.builtin.lineinfile:
    state: present
    path: "$HOME/.zshrc"
    line: "export RACK_USER_DIR={{ rack_user_dir }}"