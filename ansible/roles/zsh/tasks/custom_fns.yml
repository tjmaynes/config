---

- name: Ensure backup directory exists
  file:
    path: "{{ backups_dir }}"
    state: directory
    follow: true

- name: Check if BACKUPS_DIRECTORY env var is already defined
  lineinfile:
    state: absent
    path: "$HOME/.zshrc"
    regexp: "^export BACKUPS_DIRECTORY={{ backups_dir }}"
  check_mode: true
  changed_when: false
  register: check_BACKUPS_DIRECTORY_env_var

- name: Set BACKUPS_DIRECTORY env var if not already started
  lineinfile:
    state: present
    path: "$HOME/.zshrc"
    line: "export BACKUPS_DIRECTORY={{ backups_dir }}"
  when: check_BACKUPS_DIRECTORY_env_var.found == 0

- name: Check if PROJECTS_DIRECTORY env var is already defined
  lineinfile:
    state: absent
    path: "$HOME/.zshrc"
    regexp: "^export PROJECTS_DIRECTORY={{ git_projects_dir }}"
  check_mode: true
  changed_when: false
  register: check_PROJECTS_DIRECTORY_env_var

- name: Set PROJECTS_DIRECTORY env var if not already started
  lineinfile:
    state: present
    path: "$HOME/.zshrc"
    line: "export PROJECTS_DIRECTORY={{ git_projects_dir }}"
  when: check_PROJECTS_DIRECTORY_env_var.found == 0

- name: Check if custom-fns is already defined
  lineinfile:
    state: absent
    path: "$HOME/.zshrc"
    regexp: "^source $HOME/.custom-fns.sh"
  check_mode: true
  changed_when: false
  register: check_custom_fns_script

- name: Set custom-fns if not already started
  lineinfile:
    state: present
    path: "$HOME/.zshrc"
    line: "source $HOME/.custom-fns.sh"
  when: check_custom_fns_script.found == 0
